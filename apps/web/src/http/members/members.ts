/**
 * Generated by orval v7.7.0 🍺
 * Do not edit manually.
 * squd_in
 * Full-stack SaaS with multi-tenant & RBAC.
 * OpenAPI spec version: 0.0.1
 */
import type {
  GetOrganizationMembers200,
  RemoveMember204,
  UpdateMember204,
  UpdateMemberBody,
} from '../api.schemas'

import { fetcher } from '../../lib/fetcher'

/**
 * @summary Get all members in a organization
 */
export type getOrganizationMembersResponse200 = {
  data: GetOrganizationMembers200
  status: 200
}

export type getOrganizationMembersResponseComposite =
  getOrganizationMembersResponse200

export type getOrganizationMembersResponse =
  getOrganizationMembersResponseComposite & {
    headers: Headers
  }

export const getGetOrganizationMembersUrl = (slug: string) => {
  return `http://localhost:3333/organizations/${slug}/members`
}

export const getOrganizationMembers = async (
  slug: string,
  options?: RequestInit
): Promise<getOrganizationMembersResponse> => {
  return fetcher<getOrganizationMembersResponse>(
    getGetOrganizationMembersUrl(slug),
    {
      ...options,
      method: 'GET',
    }
  )
}

/**
 * @summary Update a member infos
 */
export type updateMemberResponse204 = {
  data: UpdateMember204
  status: 204
}

export type updateMemberResponseComposite = updateMemberResponse204

export type updateMemberResponse = updateMemberResponseComposite & {
  headers: Headers
}

export const getUpdateMemberUrl = (slug: string, memberId: string) => {
  return `http://localhost:3333/organizations/${slug}/members/${memberId}`
}

export const updateMember = async (
  slug: string,
  memberId: string,
  updateMemberBody: UpdateMemberBody,
  options?: RequestInit
): Promise<updateMemberResponse> => {
  return fetcher<updateMemberResponse>(getUpdateMemberUrl(slug, memberId), {
    ...options,
    method: 'PUT',
    headers: { 'Content-Type': 'application/json', ...options?.headers },
    body: JSON.stringify(updateMemberBody),
  })
}

/**
 * @summary Remove a member in a organization
 */
export type removeMemberResponse204 = {
  data: RemoveMember204
  status: 204
}

export type removeMemberResponseComposite = removeMemberResponse204

export type removeMemberResponse = removeMemberResponseComposite & {
  headers: Headers
}

export const getRemoveMemberUrl = (slug: string, memberId: string) => {
  return `http://localhost:3333/organizations/${slug}/members/${memberId}`
}

export const removeMember = async (
  slug: string,
  memberId: string,
  options?: RequestInit
): Promise<removeMemberResponse> => {
  return fetcher<removeMemberResponse>(getRemoveMemberUrl(slug, memberId), {
    ...options,
    method: 'DELETE',
  })
}
